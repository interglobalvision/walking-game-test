{
  "version": 3,
  "sources": [
    "../../../../../../../.meteor/packages/cosmos_browserify/.0.5.0.m6l4da++os+web.browser+web.cordova/plugin.CosmosBrowserify.os/npm/CosmosBrowserify/node_modules/browserify/node_modules/browser-pack/_prelude.js",
    "_stream_0.js",
    "../../../../../node_modules/dtw/index.js",
    "../../../../../node_modules/dtw/lib/comparison.js",
    "../../../../../node_modules/dtw/lib/distanceFunctions/euclidean.js",
    "../../../../../node_modules/dtw/lib/distanceFunctions/manhattan.js",
    "../../../../../node_modules/dtw/lib/distanceFunctions/squaredEuclidean.js",
    "../../../../../node_modules/dtw/lib/dtw.js",
    "../../../../../node_modules/dtw/lib/matrix.js",
    "../../../../../node_modules/dtw/lib/validate.js",
    "../../../../../node_modules/dtw/node_modules/debug/browser.js",
    "../../../../../node_modules/dtw/node_modules/debug/debug.js",
    "../../../../../node_modules/dtw/node_modules/debug/node_modules/ms/index.js"
  ],
  "names": [],
  "mappings": "AAAA;ACAA;AACA;;ACDA;AACA;;ACDA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACpjxrMA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA",
  "file": "generated.js",
  "sourceRoot": "",
  "sourcesContent": [
    "(function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require==\"function\"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error(\"Cannot find module '\"+o+\"'\");throw f.code=\"MODULE_NOT_FOUND\",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require==\"function\"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})",
    "DTW = require('dtw');\n",
    "module.exports = require('./lib/dtw');\r\n",
    "var EPSILON = 2.2204460492503130808472633361816E-16;\r\n\r\nvar nearlyEqual = function (i, j, epsilon) {\r\n    var iAbsolute= Math.abs(i);\r\n    var jAbsolute = Math.abs(j);\r\n    var difference = Math.abs(i - j);\r\n    var equal = i === j;\r\n    if (!equal) {\r\n        equal = difference < EPSILON;\r\n        if (!equal) {\r\n            equal = difference <= Math.max(iAbsolute, jAbsolute) * epsilon;\r\n        }\r\n    }\r\n\r\n    return equal;\r\n};\r\n\r\nmodule.exports = {\r\n    EPSILON: EPSILON,\r\n    nearlyEqual: nearlyEqual\r\n};",
    "var distance = function (x, y) {\r\n    var difference = x - y;\r\n    var euclideanDistance = Math.sqrt(difference * difference);\r\n    return euclideanDistance;\r\n};\r\n\r\nmodule.exports = {\r\n    distance: distance\r\n};\r\n",
    "var distance = function (x, y) {\r\n    var difference = x - y;\r\n    var manhattanDistance = Math.abs(difference);\r\n    return manhattanDistance;\r\n};\r\n\r\nmodule.exports = {\r\n    distance: distance\r\n};\r\n",
    "var distance = function (x, y) {\r\n    var difference = x - y;\r\n    var squaredEuclideanDistance = difference * difference;\r\n    return squaredEuclideanDistance;\r\n};\r\n\r\nmodule.exports = {\r\n    distance: distance\r\n};\r\n",
    "/**\r\n * @title DTW API\r\n * @author Elmar Langholz\r\n */\r\n\r\nvar debug = require('debug')('dtw');\r\nvar validate = require('./validate');\r\nvar matrix = require('./matrix');\r\nvar comparison = require('./comparison');\r\n\r\nfunction validateOptions(options) {\r\n    if (typeof options !== 'object') {\r\n        throw new TypeError('Invalid options type: expected an object');\r\n    } else if (typeof options.distanceMetric !== 'string' && typeof options.distanceFunction !== 'function') {\r\n        throw new TypeError('Invalid distance types: expected a string distance type or a distance function');\r\n    } else if (typeof options.distanceMetric === 'string' && typeof options.distanceFunction === 'function') {\r\n        throw new Error('Invalid parameters: provide either a distance metric or function but not both');\r\n    }\r\n\r\n    if (typeof options.distanceMetric === 'string') {\r\n        var normalizedDistanceMetric = options.distanceMetric.toLowerCase();\r\n        if (normalizedDistanceMetric !== 'manhattan' && normalizedDistanceMetric !== 'euclidean'\r\n            && normalizedDistanceMetric !== 'squaredeuclidean') {\r\n            throw new Error('Invalid parameter value: Unknown distance metric \\'' + options.distanceMetric + '\\'');\r\n        }\r\n    }\r\n}\r\n\r\nfunction retrieveDistanceFunction(distanceMetric) {\r\n    var normalizedDistanceMetric = distanceMetric.toLowerCase();\r\n    var distanceFunction = null;\r\n    if (normalizedDistanceMetric === 'manhattan') {\r\n        distanceFunction = require('./distanceFunctions/manhattan').distance;\r\n    } else if (normalizedDistanceMetric === 'euclidean') {\r\n        distanceFunction = require('./distanceFunctions/euclidean').distance;\r\n    } else if (normalizedDistanceMetric === 'squaredeuclidean') {\r\n        distanceFunction = require('./distanceFunctions/squaredEuclidean').distance;\r\n    }\r\n\r\n    return distanceFunction;\r\n}\r\n\r\n/**\r\n * Create a DTWOptions object\r\n * @class DTWOptions\r\n * @member {string} distanceMetric The distance metric to use: `'manhattan' | 'euclidean' | 'squaredEuclidean'`.\r\n * @member {function} distanceFunction The distance function to use. The function should accept two numeric arguments and return the numeric distance. e.g. function (a, b) { return a + b; }\r\n */\r\n\r\n/**\r\n * Create a DTW object\r\n * @class DTW\r\n */\r\n/**\r\n * Initializes a new instance of the `DTW`. If no options are provided the squared euclidean distance function is used.\r\n * @function DTW\r\n * @param {DTWOptions} [options] The options to initialize the dynamic time warping instance with.\r\n */\r\n/**\r\n * Computes the optimal match between two provided sequences.\r\n * @method compute\r\n * @param {number[]} firstSequence The first sequence.\r\n * @param {number[]} secondSequence The second sequence.\r\n * @param {number} [window] The window parameter (for the locality constraint) to use.\r\n * @returns {number} The similarity between the provided temporal sequences.\r\n */\r\n/**\r\n * Retrieves the optimal match between two provided sequences.\r\n * @method path\r\n * @returns {number[]} The array containing the optimal path points.\r\n */\r\nvar DTW = function (options) {\r\n    var state = { distanceCostMatrix: null };\r\n    if (typeof options === 'undefined') {\r\n        state.distance = require('./distanceFunctions/squaredEuclidean').distance;\r\n    } else {\r\n        validateOptions(options);\r\n        if (typeof options.distanceMetric === 'string') {\r\n            state.distance = retrieveDistanceFunction(options.distanceMetric);\r\n        } else if (typeof options.distanceFunction === 'function') {\r\n            state.distance = options.distanceFunction;\r\n        }\r\n    }\r\n\r\n    this.compute = function (firstSequence, secondSequence, window) {\r\n        var cost = Number.POSITIVE_INFINITY;\r\n        if (typeof window === 'undefined') {\r\n            cost = computeOptimalPath(firstSequence, secondSequence, state);\r\n        } else if (typeof window === 'number') {\r\n            cost = computeOptimalPathWithWindow(firstSequence, secondSequence, window, state);\r\n        } else {\r\n            throw new TypeError('Invalid window parameter type: expected a number');\r\n        }\r\n\r\n        return cost;\r\n    };\r\n\r\n    this.path = function () {\r\n        var path = null;\r\n        if (state.distanceCostMatrix instanceof Array) {\r\n            path = retrieveOptimalPath(state);\r\n        }\r\n\r\n        return path;\r\n    };\r\n};\r\n\r\nfunction validateComputeParameters(s, t) {\r\n    validate.sequence(s, 'firstSequence');\r\n    validate.sequence(t, 'secondSequence');\r\n}\r\n\r\nfunction computeOptimalPath(s, t, state) {\r\n    debug('> computeOptimalPath');\r\n    validateComputeParameters(s, t);\r\n    var start = new Date().getTime();\r\n    state.m = s.length;\r\n    state.n = t.length;\r\n    var distanceCostMatrix = matrix.create(state.m, state.n, Number.POSITIVE_INFINITY);\r\n\r\n    distanceCostMatrix[0][0] = state.distance(s[0], t[0]);\r\n\r\n    for (var rowIndex = 1; rowIndex < state.m; rowIndex++) {\r\n        var cost = state.distance(s[rowIndex], t[0]);\r\n        distanceCostMatrix[rowIndex][0] = cost + distanceCostMatrix[rowIndex - 1][0];\r\n    }\r\n\r\n    for (var columnIndex = 1; columnIndex < state.n; columnIndex++) {\r\n        var cost = state.distance(s[0], t[columnIndex]);\r\n        distanceCostMatrix[0][columnIndex] = cost + distanceCostMatrix[0][columnIndex - 1];\r\n    }\r\n\r\n    for (var rowIndex = 1; rowIndex < state.m; rowIndex++) {\r\n        for (var columnIndex = 1; columnIndex < state.n; columnIndex++) {\r\n            var cost = state.distance(s[rowIndex], t[columnIndex]);\r\n            distanceCostMatrix[rowIndex][columnIndex] =\r\n                cost + Math.min(\r\n                    distanceCostMatrix[rowIndex - 1][columnIndex],          // Insertion\r\n                    distanceCostMatrix[rowIndex][columnIndex - 1],          // Deletion\r\n                    distanceCostMatrix[rowIndex - 1][columnIndex - 1]);     // Match\r\n        }\r\n    }\r\n\r\n    var end = new Date().getTime();\r\n    var time = end - start;\r\n    debug('< computeOptimalPath (' + time + ' ms)');\r\n    state.distanceCostMatrix = distanceCostMatrix;\r\n    state.similarity = distanceCostMatrix[state.m - 1][state.n - 1];\r\n    return state.similarity;\r\n}\r\n\r\nfunction computeOptimalPathWithWindow(s, t, w, state) {\r\n    debug('> computeOptimalPathWithWindow');\r\n    validateComputeParameters(s, t);\r\n    var start = new Date().getTime();\r\n    state.m = s.length;\r\n    state.n = t.length;\r\n    var window = Math.max(w, Math.abs(s.length - t.length));\r\n    var distanceCostMatrix = matrix.create(state.m + 1, state.n + 1, Number.POSITIVE_INFINITY);\r\n    distanceCostMatrix[0][0] = 0;\r\n\r\n    for (var rowIndex = 1; rowIndex <= state.m; rowIndex++) {\r\n        for (var columnIndex = Math.max(1, rowIndex - window); columnIndex <= Math.min(state.n, rowIndex + window); columnIndex++) {\r\n            var cost = state.distance(s[rowIndex - 1], t[columnIndex - 1]);\r\n            distanceCostMatrix[rowIndex][columnIndex] =\r\n                cost + Math.min(\r\n                distanceCostMatrix[rowIndex - 1][columnIndex],          // Insertion\r\n                distanceCostMatrix[rowIndex][columnIndex - 1],          // Deletion\r\n                distanceCostMatrix[rowIndex - 1][columnIndex - 1]);     // Match\r\n        }\r\n    }\r\n\r\n    var end = new Date().getTime();\r\n    var time = end - start;\r\n    debug('< computeOptimalPathWithWindow (' + time + ' ms)');\r\n    distanceCostMatrix.shift();\r\n    distanceCostMatrix = distanceCostMatrix.map(function (row) {\r\n        return row.slice(1, row.length);\r\n    });\r\n    state.distanceCostMatrix = distanceCostMatrix;\r\n    state.similarity = distanceCostMatrix[state.m - 1][state.n - 1];\r\n    return state.similarity;\r\n}\r\n\r\nfunction retrieveOptimalPath(state) {\r\n    debug('> retrieveOptimalPath');\r\n    var start = new Date().getTime();\r\n\r\n    var rowIndex = state.m - 1;\r\n    var columnIndex = state.n - 1;\r\n    var path = [[rowIndex, columnIndex]];\r\n    var epsilon = 1e-14;\r\n    while ((rowIndex > 0) || (columnIndex > 0)) {\r\n        if ((rowIndex > 0) && (columnIndex > 0)) {\r\n            var min = Math.min(\r\n                state.distanceCostMatrix[rowIndex - 1][columnIndex],          // Insertion\r\n                state.distanceCostMatrix[rowIndex][columnIndex - 1],          // Deletion\r\n                state.distanceCostMatrix[rowIndex - 1][columnIndex - 1]);     // Match\r\n            if (comparison.nearlyEqual(min, state.distanceCostMatrix[rowIndex - 1][columnIndex - 1], epsilon)) {\r\n                rowIndex--;\r\n                columnIndex--;\r\n            } else if (comparison.nearlyEqual(min, state.distanceCostMatrix[rowIndex - 1][columnIndex], epsilon)) {\r\n                rowIndex--;\r\n            } else if (comparison.nearlyEqual(min, state.distanceCostMatrix[rowIndex][columnIndex - 1], epsilon)) {\r\n                columnIndex--;\r\n            }\r\n        } else if ((rowIndex > 0) && (columnIndex === 0)) {\r\n            rowIndex--;\r\n        } else if ((rowIndex === 0) && (columnIndex > 0)) {\r\n            columnIndex--;\r\n        }\r\n\r\n        path.push([rowIndex, columnIndex]);\r\n    }\r\n\r\n    var end = new Date().getTime();\r\n    var time = end - start;\r\n    debug('< retrieveOptimalPath (' + time + ' ms)');\r\n    return path.reverse();\r\n}\r\n\r\nmodule.exports = DTW;\r\n",
    "var createArray = function (length, value) {\r\n    if (typeof length !== 'number') {\r\n        throw new TypeError('Invalid length type');\r\n    }\r\n\r\n    if (typeof value === 'undefined') {\r\n        throw new Error('Invalid value: expected a value to be provided');\r\n    }\r\n\r\n    var array = new Array(length);\r\n    for (var index = 0; index < length; index++) {\r\n        array[index] = value;\r\n    }\r\n\r\n    return array;\r\n};\r\n\r\nvar createMatrix = function (m, n, value) {\r\n    var matrix = [];\r\n    for (var rowIndex = 0; rowIndex < m; rowIndex++) {\r\n        matrix.push(createArray(n, value));\r\n    }\r\n\r\n    return matrix;\r\n};\r\n\r\nmodule.exports = {\r\n    create: createMatrix\r\n};\r\n",
    "function validateSequence(sequence, sequenceParameterName) {\r\n    if (!(sequence instanceof Array)) {\r\n        throw new TypeError('Invalid sequence \\'' + sequenceParameterName + '\\' type: expected an array');\r\n    }\r\n\r\n    if (sequence.length < 1) {\r\n        throw new Error('Invalid number of sequence data points for \\'' + sequenceParameterName + '\\': expected at least one');\r\n    }\r\n\r\n    if (typeof sequence[0] !== 'number') {\r\n        throw new TypeError('Invalid data points types for sequence \\'' + sequenceParameterName + '\\': expected a number');\r\n    }\r\n}\r\n\r\nmodule.exports = {\r\n    sequence: validateSequence\r\n};\r\n",
    "\n/**\n * This is the web browser implementation of `debug()`.\n *\n * Expose `debug()` as the module.\n */\n\nexports = module.exports = require('./debug');\nexports.log = log;\nexports.formatArgs = formatArgs;\nexports.save = save;\nexports.load = load;\nexports.useColors = useColors;\nexports.storage = 'undefined' != typeof chrome\n               && 'undefined' != typeof chrome.storage\n                  ? chrome.storage.local\n                  : localstorage();\n\n/**\n * Colors.\n */\n\nexports.colors = [\n  'lightseagreen',\n  'forestgreen',\n  'goldenrod',\n  'dodgerblue',\n  'darkorchid',\n  'crimson'\n];\n\n/**\n * Currently only WebKit-based Web Inspectors, Firefox >= v31,\n * and the Firebug extension (any Firefox version) are known\n * to support \"%c\" CSS customizations.\n *\n * TODO: add a `localStorage` variable to explicitly enable/disable colors\n */\n\nfunction useColors() {\n  // is webkit? http://stackoverflow.com/a/16459606/376773\n  return ('WebkitAppearance' in document.documentElement.style) ||\n    // is firebug? http://stackoverflow.com/a/398120/376773\n    (window.console && (console.firebug || (console.exception && console.table))) ||\n    // is firefox >= v31?\n    // https://developer.mozilla.org/en-US/docs/Tools/Web_Console#Styling_messages\n    (navigator.userAgent.toLowerCase().match(/firefox\\/(\\d+)/) && parseInt(RegExp.$1, 10) >= 31);\n}\n\n/**\n * Map %j to `JSON.stringify()`, since no Web Inspectors do that by default.\n */\n\nexports.formatters.j = function(v) {\n  return JSON.stringify(v);\n};\n\n\n/**\n * Colorize log arguments if enabled.\n *\n * @api public\n */\n\nfunction formatArgs() {\n  var args = arguments;\n  var useColors = this.useColors;\n\n  args[0] = (useColors ? '%c' : '')\n    + this.namespace\n    + (useColors ? ' %c' : ' ')\n    + args[0]\n    + (useColors ? '%c ' : ' ')\n    + '+' + exports.humanize(this.diff);\n\n  if (!useColors) return args;\n\n  var c = 'color: ' + this.color;\n  args = [args[0], c, 'color: inherit'].concat(Array.prototype.slice.call(args, 1));\n\n  // the final \"%c\" is somewhat tricky, because there could be other\n  // arguments passed either before or after the %c, so we need to\n  // figure out the correct index to insert the CSS into\n  var index = 0;\n  var lastC = 0;\n  args[0].replace(/%[a-z%]/g, function(match) {\n    if ('%%' === match) return;\n    index++;\n    if ('%c' === match) {\n      // we only are interested in the *last* %c\n      // (the user may have provided their own)\n      lastC = index;\n    }\n  });\n\n  args.splice(lastC, 0, c);\n  return args;\n}\n\n/**\n * Invokes `console.log()` when available.\n * No-op when `console.log` is not a \"function\".\n *\n * @api public\n */\n\nfunction log() {\n  // this hackery is required for IE8/9, where\n  // the `console.log` function doesn't have 'apply'\n  return 'object' === typeof console\n    && console.log\n    && Function.prototype.apply.call(console.log, console, arguments);\n}\n\n/**\n * Save `namespaces`.\n *\n * @param {String} namespaces\n * @api private\n */\n\nfunction save(namespaces) {\n  try {\n    if (null == namespaces) {\n      exports.storage.removeItem('debug');\n    } else {\n      exports.storage.debug = namespaces;\n    }\n  } catch(e) {}\n}\n\n/**\n * Load `namespaces`.\n *\n * @return {String} returns the previously persisted debug modes\n * @api private\n */\n\nfunction load() {\n  var r;\n  try {\n    r = exports.storage.debug;\n  } catch(e) {}\n  return r;\n}\n\n/**\n * Enable namespaces listed in `localStorage.debug` initially.\n */\n\nexports.enable(load());\n\n/**\n * Localstorage attempts to return the localstorage.\n *\n * This is necessary because safari throws\n * when a user disables cookies/localstorage\n * and you attempt to access it.\n *\n * @return {LocalStorage}\n * @api private\n */\n\nfunction localstorage(){\n  try {\n    return window.localStorage;\n  } catch (e) {}\n}\n",
    "\n/**\n * This is the common logic for both the Node.js and web browser\n * implementations of `debug()`.\n *\n * Expose `debug()` as the module.\n */\n\nexports = module.exports = debug;\nexports.coerce = coerce;\nexports.disable = disable;\nexports.enable = enable;\nexports.enabled = enabled;\nexports.humanize = require('ms');\n\n/**\n * The currently active debug mode names, and names to skip.\n */\n\nexports.names = [];\nexports.skips = [];\n\n/**\n * Map of special \"%n\" handling functions, for the debug \"format\" argument.\n *\n * Valid key names are a single, lowercased letter, i.e. \"n\".\n */\n\nexports.formatters = {};\n\n/**\n * Previously assigned color.\n */\n\nvar prevColor = 0;\n\n/**\n * Previous log timestamp.\n */\n\nvar prevTime;\n\n/**\n * Select a color.\n *\n * @return {Number}\n * @api private\n */\n\nfunction selectColor() {\n  return exports.colors[prevColor++ % exports.colors.length];\n}\n\n/**\n * Create a debugger with the given `namespace`.\n *\n * @param {String} namespace\n * @return {Function}\n * @api public\n */\n\nfunction debug(namespace) {\n\n  // define the `disabled` version\n  function disabled() {\n  }\n  disabled.enabled = false;\n\n  // define the `enabled` version\n  function enabled() {\n\n    var self = enabled;\n\n    // set `diff` timestamp\n    var curr = +new Date();\n    var ms = curr - (prevTime || curr);\n    self.diff = ms;\n    self.prev = prevTime;\n    self.curr = curr;\n    prevTime = curr;\n\n    // add the `color` if not set\n    if (null == self.useColors) self.useColors = exports.useColors();\n    if (null == self.color && self.useColors) self.color = selectColor();\n\n    var args = Array.prototype.slice.call(arguments);\n\n    args[0] = exports.coerce(args[0]);\n\n    if ('string' !== typeof args[0]) {\n      // anything else let's inspect with %o\n      args = ['%o'].concat(args);\n    }\n\n    // apply any `formatters` transformations\n    var index = 0;\n    args[0] = args[0].replace(/%([a-z%])/g, function(match, format) {\n      // if we encounter an escaped % then don't increase the array index\n      if (match === '%%') return match;\n      index++;\n      var formatter = exports.formatters[format];\n      if ('function' === typeof formatter) {\n        var val = args[index];\n        match = formatter.call(self, val);\n\n        // now we need to remove `args[index]` since it's inlined in the `format`\n        args.splice(index, 1);\n        index--;\n      }\n      return match;\n    });\n\n    if ('function' === typeof exports.formatArgs) {\n      args = exports.formatArgs.apply(self, args);\n    }\n    var logFn = enabled.log || exports.log || console.log.bind(console);\n    logFn.apply(self, args);\n  }\n  enabled.enabled = true;\n\n  var fn = exports.enabled(namespace) ? enabled : disabled;\n\n  fn.namespace = namespace;\n\n  return fn;\n}\n\n/**\n * Enables a debug mode by namespaces. This can include modes\n * separated by a colon and wildcards.\n *\n * @param {String} namespaces\n * @api public\n */\n\nfunction enable(namespaces) {\n  exports.save(namespaces);\n\n  var split = (namespaces || '').split(/[\\s,]+/);\n  var len = split.length;\n\n  for (var i = 0; i < len; i++) {\n    if (!split[i]) continue; // ignore empty strings\n    namespaces = split[i].replace(/\\*/g, '.*?');\n    if (namespaces[0] === '-') {\n      exports.skips.push(new RegExp('^' + namespaces.substr(1) + '$'));\n    } else {\n      exports.names.push(new RegExp('^' + namespaces + '$'));\n    }\n  }\n}\n\n/**\n * Disable debug output.\n *\n * @api public\n */\n\nfunction disable() {\n  exports.enable('');\n}\n\n/**\n * Returns true if the given mode name is enabled, false otherwise.\n *\n * @param {String} name\n * @return {Boolean}\n * @api public\n */\n\nfunction enabled(name) {\n  var i, len;\n  for (i = 0, len = exports.skips.length; i < len; i++) {\n    if (exports.skips[i].test(name)) {\n      return false;\n    }\n  }\n  for (i = 0, len = exports.names.length; i < len; i++) {\n    if (exports.names[i].test(name)) {\n      return true;\n    }\n  }\n  return false;\n}\n\n/**\n * Coerce `val`.\n *\n * @param {Mixed} val\n * @return {Mixed}\n * @api private\n */\n\nfunction coerce(val) {\n  if (val instanceof Error) return val.stack || val.message;\n  return val;\n}\n",
    "/**\n * Helpers.\n */\n\nvar s = 1000;\nvar m = s * 60;\nvar h = m * 60;\nvar d = h * 24;\nvar y = d * 365.25;\n\n/**\n * Parse or format the given `val`.\n *\n * Options:\n *\n *  - `long` verbose formatting [false]\n *\n * @param {String|Number} val\n * @param {Object} options\n * @return {String|Number}\n * @api public\n */\n\nmodule.exports = function(val, options){\n  options = options || {};\n  if ('string' == typeof val) return parse(val);\n  return options.long\n    ? long(val)\n    : short(val);\n};\n\n/**\n * Parse the given `str` and return milliseconds.\n *\n * @param {String} str\n * @return {Number}\n * @api private\n */\n\nfunction parse(str) {\n  str = '' + str;\n  if (str.length > 10000) return;\n  var match = /^((?:\\d+)?\\.?\\d+) *(milliseconds?|msecs?|ms|seconds?|secs?|s|minutes?|mins?|m|hours?|hrs?|h|days?|d|years?|yrs?|y)?$/i.exec(str);\n  if (!match) return;\n  var n = parseFloat(match[1]);\n  var type = (match[2] || 'ms').toLowerCase();\n  switch (type) {\n    case 'years':\n    case 'year':\n    case 'yrs':\n    case 'yr':\n    case 'y':\n      return n * y;\n    case 'days':\n    case 'day':\n    case 'd':\n      return n * d;\n    case 'hours':\n    case 'hour':\n    case 'hrs':\n    case 'hr':\n    case 'h':\n      return n * h;\n    case 'minutes':\n    case 'minute':\n    case 'mins':\n    case 'min':\n    case 'm':\n      return n * m;\n    case 'seconds':\n    case 'second':\n    case 'secs':\n    case 'sec':\n    case 's':\n      return n * s;\n    case 'milliseconds':\n    case 'millisecond':\n    case 'msecs':\n    case 'msec':\n    case 'ms':\n      return n;\n  }\n}\n\n/**\n * Short format for `ms`.\n *\n * @param {Number} ms\n * @return {String}\n * @api private\n */\n\nfunction short(ms) {\n  if (ms >= d) return Math.round(ms / d) + 'd';\n  if (ms >= h) return Math.round(ms / h) + 'h';\n  if (ms >= m) return Math.round(ms / m) + 'm';\n  if (ms >= s) return Math.round(ms / s) + 's';\n  return ms + 'ms';\n}\n\n/**\n * Long format for `ms`.\n *\n * @param {Number} ms\n * @return {String}\n * @api private\n */\n\nfunction long(ms) {\n  return plural(ms, d, 'day')\n    || plural(ms, h, 'hour')\n    || plural(ms, m, 'minute')\n    || plural(ms, s, 'second')\n    || ms + ' ms';\n}\n\n/**\n * Pluralization helper.\n */\n\nfunction plural(ms, n, name) {\n  if (ms < n) return;\n  if (ms < n * 1.5) return Math.floor(ms / n) + ' ' + name;\n  return Math.ceil(ms / n) + ' ' + name + 's';\n}\n"
  ]
}